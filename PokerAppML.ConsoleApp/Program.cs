// This file was auto-generated by ML.NET Model Builder. 

using System;
using PokerAppML.Model;

namespace PokerAppML.ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {
            //ModelBuilder.CreateModel();
            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = new ModelInput()
            {
                ImageSource = @"C:\Users\Windows.000\Documents\DEV\PokerApp\DeepLearning_ImageClassification_Binary\assets\10\0d2e9_1.png",
            };
            ModelInput sampleData2 = new ModelInput()
            {
                ImageSource = @"C:\Users\Windows.000\Documents\DEV\PokerApp\DeepLearning_ImageClassification_Binary\assets\3\4ad1e_1.png",
            };
            ConsumeModel model = new ConsumeModel();
            // Make a single prediction on the sample data and print results
            var predictionResult = model.Predict(sampleData);
            var predictionResult2 = model.Predict(sampleData2);
            Console.WriteLine("Using model to make single prediction -- Comparing actual Label with predicted Label from sample data...\n\n");
            Console.WriteLine($"ImageSource: {sampleData.ImageSource}");
            Console.WriteLine($"\n\nPredicted Label value {predictionResult.Prediction} \nPredicted Label scores: [{String.Join(",", predictionResult.Score)}]\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");

            Console.WriteLine("Using model to make single prediction -- Comparing actual Label with predicted Label from sample data...\n\n");
            Console.WriteLine($"ImageSource: {sampleData2.ImageSource}");
            Console.WriteLine($"\n\nPredicted Label value {predictionResult2.Prediction} \nPredicted Label scores: [{String.Join(",", predictionResult2.Score)}]\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");

            Console.ReadKey();
        }
    }
}
